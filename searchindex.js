Search.setIndex({"docnames": ["auto_examples/index", "auto_examples/plot_metric_learning_examples", "auto_examples/plot_sandwich", "auto_examples/sg_execution_times", "generated/metric_learn.Constraints", "generated/metric_learn.Covariance", "generated/metric_learn.ITML", "generated/metric_learn.ITML_Supervised", "generated/metric_learn.LFDA", "generated/metric_learn.LMNN", "generated/metric_learn.LSML", "generated/metric_learn.LSML_Supervised", "generated/metric_learn.MLKR", "generated/metric_learn.MMC", "generated/metric_learn.MMC_Supervised", "generated/metric_learn.NCA", "generated/metric_learn.RCA", "generated/metric_learn.RCA_Supervised", "generated/metric_learn.SCML", "generated/metric_learn.SCML_Supervised", "generated/metric_learn.SDML", "generated/metric_learn.SDML_Supervised", "generated/metric_learn.base_metric.BaseMetricLearner", "generated/metric_learn.base_metric.MahalanobisMixin", "generated/metric_learn.base_metric.MetricTransformer", "generated/metric_learn.base_metric._PairsClassifierMixin", "generated/metric_learn.base_metric._QuadrupletsClassifierMixin", "generated/metric_learn.base_metric._TripletsClassifierMixin", "getting_started", "index", "introduction", "metric_learn", "preprocessor", "supervised", "unsupervised", "user_guide", "weakly_supervised"], "filenames": ["auto_examples/index.rst", "auto_examples/plot_metric_learning_examples.rst", "auto_examples/plot_sandwich.rst", "auto_examples/sg_execution_times.rst", "generated/metric_learn.Constraints.rst", "generated/metric_learn.Covariance.rst", "generated/metric_learn.ITML.rst", "generated/metric_learn.ITML_Supervised.rst", "generated/metric_learn.LFDA.rst", "generated/metric_learn.LMNN.rst", "generated/metric_learn.LSML.rst", "generated/metric_learn.LSML_Supervised.rst", "generated/metric_learn.MLKR.rst", "generated/metric_learn.MMC.rst", "generated/metric_learn.MMC_Supervised.rst", "generated/metric_learn.NCA.rst", "generated/metric_learn.RCA.rst", "generated/metric_learn.RCA_Supervised.rst", "generated/metric_learn.SCML.rst", "generated/metric_learn.SCML_Supervised.rst", "generated/metric_learn.SDML.rst", "generated/metric_learn.SDML_Supervised.rst", "generated/metric_learn.base_metric.BaseMetricLearner.rst", "generated/metric_learn.base_metric.MahalanobisMixin.rst", "generated/metric_learn.base_metric.MetricTransformer.rst", "generated/metric_learn.base_metric._PairsClassifierMixin.rst", "generated/metric_learn.base_metric._QuadrupletsClassifierMixin.rst", "generated/metric_learn.base_metric._TripletsClassifierMixin.rst", "getting_started.rst", "index.rst", "introduction.rst", "metric_learn.rst", "preprocessor.rst", "supervised.rst", "unsupervised.rst", "user_guide.rst", "weakly_supervised.rst"], "titles": ["Examples", "Algorithms walkthrough", "Sandwich demo", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.Constraints", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.Covariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.ITML", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.ITML_Supervised", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.LFDA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.LMNN", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.LSML", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.LSML_Supervised", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.MLKR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.MMC", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.MMC_Supervised", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.NCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.RCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.RCA_Supervised", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.SCML", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.SCML_Supervised", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.SDML", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn</span></code>.SDML_Supervised", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn.base_metric</span></code>.BaseMetricLearner", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn.base_metric</span></code>.MahalanobisMixin", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn.base_metric</span></code>.MetricTransformer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn.base_metric</span></code>._PairsClassifierMixin", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn.base_metric</span></code>._QuadrupletsClassifierMixin", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metric_learn.base_metric</span></code>._TripletsClassifierMixin", "Getting started", "metric-learn: Metric Learning in Python", "<span class=\"section-number\">1. </span>What is Metric Learning?", "metric_learn package", "<span class=\"section-number\">5. </span>Preprocessor", "<span class=\"section-number\">2. </span>Supervised Metric Learning", "<span class=\"section-number\">4. </span>Unsupervised Metric Learning", "User guide: contents", "<span class=\"section-number\">3. </span>Weakly Supervised Metric Learning"], "terms": {"below": [0, 1, 34, 36], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36], "galleri": [0, 1, 2], "metric": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35], "learn": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35], "us": [0, 1, 2, 4, 5, 18, 19, 26, 27, 28, 29, 32, 33, 34, 35, 36], "case": [0, 1, 4, 6, 7, 11, 13, 14, 18, 19, 20, 21, 25, 28, 32, 33, 35, 36], "sandwich": [0, 3, 7, 9, 11, 21, 22, 23, 24], "demo": [0, 3, 7, 9, 11, 21, 22, 23, 24], "algorithm": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35], "walkthrough": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25], "download": [0, 1, 2, 28], "all": [0, 1, 4, 6, 7, 10, 13, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36], "python": [0, 1, 2, 28, 30], "sourc": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "code": [0, 1, 2, 6, 10, 13, 20, 25, 28, 30, 33, 34, 36], "auto_examples_python": 0, "zip": 0, "jupyt": [0, 1, 2], "notebook": [0, 1, 2], "auto_examples_jupyt": 0, "gener": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 30, 34, 35], "sphinx": [0, 1, 2], "go": [1, 2, 36], "end": [1, 2, 6, 13, 20, 33, 36], "full": [1, 2, 16, 36], "thi": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36], "small": [1, 10, 32, 33, 36], "which": [1, 6, 12, 13, 15, 19, 20, 22, 25, 26, 27, 33, 34, 36], "illustr": [1, 30], "most": [1, 4, 6, 9, 12, 13, 15, 20, 25, 36], "implement": [1, 18, 19, 29, 30, 36], "them": [1, 30, 32, 33], "synthet": 1, "data": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 30, 34, 35], "some": [1, 4, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 30, 33, 36], "visual": [1, 12, 15, 33], "provid": [1, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 30, 32, 36], "intuit": [1, 36], "what": [1, 29, 35, 36], "thei": [1, 6, 13, 20, 25, 30, 33, 36], "ar": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "design": [1, 13, 30, 36], "achiev": [1, 6, 13, 20, 25, 30, 36], "licens": 1, "bsd": 1, "3": [1, 2, 4, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 25, 26, 27, 28, 32, 33, 36], "claus": 1, "author": [1, 29, 36], "bhargav": 1, "srinivasa": 1, "desikan": 1, "bhargavvad": 1, "gmail": 1, "com": [1, 10, 20, 28, 36], "william": [1, 2, 29], "de": [1, 29], "vazelh": [1, 29], "wdevazelh": 1, "In": [1, 2, 4, 6, 7, 10, 11, 13, 14, 18, 19, 20, 21, 25, 30, 32, 33, 36], "order": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "show": [1, 2, 30], "chart": [1, 2], "you": [1, 2, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 28, 29, 32, 33, 36], "need": [1, 2, 6, 13, 17, 20, 25, 28, 33, 36], "graphic": [1, 2], "matplotlib": [1, 2, 28], "backend": [1, 2], "instal": [1, 2, 29], "For": [1, 2, 4, 6, 7, 10, 11, 13, 18, 20, 21, 22, 25, 26, 27, 28, 30, 32, 33, 34, 36], "intanc": [1, 2], "pip": [1, 2, 28], "pyqt5": [1, 2], "get": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 36], "qt": [1, 2], "interfac": [1, 2, 29], "your": [1, 2, 33], "favorit": [1, 2], "one": [1, 2, 4, 8, 12, 13, 15, 18, 21, 30, 33, 36], "sklearn": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 33, 34, 36], "manifold": 1, "tsne": 1, "metric_learn": [1, 2, 28, 32, 33, 34, 36], "numpi": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 33, 36], "np": [1, 2, 8, 9, 15, 32, 33, 36], "make_classif": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "make_regress": 1, "visualis": 1, "pyplot": [1, 2], "plt": [1, 2], "random": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 33, 36], "seed": [1, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21], "42": [1, 33, 36], "we": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 29, 30, 33, 36], "function": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "scikit": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 35], "The": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 36], "contain": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 32, 33, 36], "100": [1, 4, 13, 14, 15, 17, 33, 36], "point": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 36], "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 36], "2": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 36], "per": [1, 2, 8, 17, 33], "5": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 33, 36], "featur": [1, 6, 10, 13, 19, 30, 32, 36], "among": [1, 6, 7, 33, 36], "correl": 1, "label": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 26, 27, 30, 33, 36], "two": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 36], "nois": 1, "magnitud": 1, "x": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36], "y": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 36], "n_sampl": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 36], "n_class": [1, 9, 15], "n_clusters_per_class": 1, "n_inform": 1, "class_sep": 1, "4": [1, 6, 10, 13, 16, 18, 26, 33, 36], "n_featur": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "n_redund": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 36], "shuffl": 1, "true": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 33, 36], "scale": [1, 8, 10, 13, 14, 19, 33], "1": [1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 32, 33, 34, 36], "20": [1, 7, 11, 14, 21, 36], "note": [1, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 30, 32, 36], "dimension": [1, 8, 9, 12, 15, 16, 17, 20, 30, 33, 36], "so": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 35], "2d": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 35], "t": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "sne": 1, "see": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 32, 33, 34, 36], "def": [1, 2, 32], "plot_tsn": 1, "colormap": 1, "cm": 1, "pair": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 35], "figur": 1, "figsiz": 1, "8": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "6": [1, 2, 6, 9, 10, 13, 18, 28, 29, 33, 36], "clean": 1, "clf": [1, 28], "x_embed": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "fit_transform": [1, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "scatter": [1, 2, 33], "c": [1, 4, 5, 6, 7, 28, 33, 34, 36], "cmap": 1, "xtick": 1, "ytick": 1, "let": [1, 36], "": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "now": [1, 6, 13, 20, 25, 33, 34, 36], "can": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36], "appear": 1, "mix": 1, "becaus": [1, 33, 36], "base": [1, 2, 10, 16, 18, 19, 22, 24, 25, 26, 27, 29, 30, 33, 36], "preserv": [1, 33], "origin": [1, 6, 7, 10, 13, 16, 17, 18, 19, 20, 21, 25, 26, 27, 33, 36], "embed": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 28, 30, 33, 36], "space": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 28, 30, 33, 36], "euclidean": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33], "distanc": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 34, 35, 36], "input": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 34, 35], "contribut": 1, "noisi": 1, "high": [1, 6, 10, 12, 13, 20, 25, 33, 36], "even": 1, "same": [1, 4, 7, 9, 11, 14, 16, 19, 21, 30, 33, 36], "close": [1, 6, 9, 10, 13, 30, 33, 36], "each": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 36], "other": [1, 4, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 30, 33, 36], "subspac": 1, "when": [1, 6, 8, 9, 10, 12, 13, 15, 16, 20, 22, 25, 26, 27, 30, 32, 33, 36], "consid": [1, 9, 36], "dimens": [1, 8, 9, 10, 12, 13, 14, 15, 16, 17, 30, 36], "why": 1, "prior": [1, 6, 7, 10, 11, 20, 21, 36], "knowledg": [1, 30, 36], "suppos": 1, "closer": [1, 6, 10, 13, 18, 27, 36], "out": [1, 12, 15, 33], "better": 1, "wai": [1, 6, 10, 11, 13, 20, 25, 28, 30, 32, 33, 36], "comput": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 36], "between": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "task": [1, 6, 10, 13, 18, 26, 27, 30, 36], "hand": 1, "especi": [1, 10, 36], "higher": [1, 9, 10, 12, 15, 18, 26, 27, 36], "poor": 1, "measur": [1, 30, 36], "becom": [1, 10, 33, 36], "veri": 1, "basic": [1, 35], "d": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 30, 33, 36], "sqrt": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33], "top": [1, 2, 24, 30], "m": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 29, 30, 33, 36], "And": 1, "paramet": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 36], "satisfi": [1, 30], "certain": 1, "constraint": [1, 2, 6, 7, 10, 11, 13, 14, 17, 18, 19, 20, 21, 33, 36], "requir": [1, 18, 28, 30, 36], "togeth": [1, 30, 36], "differ": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "far": [1, 30, 33], "awai": [1, 30, 33, 36], "more": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 30, 32, 33, 36], "check": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "section": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 36], "document": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 32, 36], "good": 1, "read": [1, 5, 6, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 35], "materi": 1, "also": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 36], "found": [1, 6, 13, 20, 25, 30], "here": [1, 28, 30, 32, 33, 36], "It": [1, 2, 6, 7, 8, 13, 14, 15, 16, 17, 20, 21, 25, 33, 34, 36], "serv": 1, "literatur": 1, "review": 1, "briefli": 1, "explain": [1, 33, 36], "befor": [1, 30, 33, 36], "its": [1, 4, 10, 30, 33, 36], "usag": 1, "discuss": 1, "how": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "perform": [1, 18, 19, 30, 36], "than": [1, 6, 9, 10, 11, 12, 13, 15, 18, 20, 25, 26, 27, 30, 33, 36], "easili": [1, 30], "integr": [1, 33], "machin": [1, 29, 30], "pipelin": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33], "follow": [1, 6, 10, 13, 18, 20, 25, 26, 27, 28, 29, 30, 33, 36], "convent": [1, 6, 13, 20, 25], "lmnn": [1, 2, 35], "primarili": 1, "k": [1, 2, 8, 9, 12, 15, 18, 19, 28, 30, 33, 36], "neighbor": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 33], "classif": [1, 6, 9, 10, 13, 15, 18, 20, 25, 26, 27, 30, 33, 36], "semidefinit": [1, 36], "program": [1, 6, 36], "sub": [1, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "convex": [1, 10, 13, 36], "main": [1, 13, 30, 33, 36], "behind": 1, "pseudometr": 1, "under": [1, 32, 33], "instanc": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 36], "train": [1, 6, 7, 14, 15, 18, 21, 30, 33, 36], "surround": 1, "share": [1, 33], "If": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 36], "leav": [1, 12, 15, 33], "error": [1, 6, 7, 10, 12, 13, 16, 17, 18, 20, 22, 25, 26, 27, 33], "special": 1, "cross": [1, 36], "valid": [1, 6, 13, 20, 25, 32, 33, 36], "minim": [1, 6, 10, 12, 13, 20, 25, 33, 36], "ll": 1, "notic": 1, "necessari": 1, "particular": [1, 30, 32, 33, 36], "implicitli": 1, "enforc": [1, 13, 36], "user": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 32, 36], "guid": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29], "n_neighbor": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33], "learn_rat": [1, 9, 33], "1e": [1, 6, 7, 9, 10, 11, 13, 14, 18, 19, 33, 36], "x_lmnn": 1, "have": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 36], "matrix": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 30, 33, 34, 36], "talk": [1, 36], "about": [1, 9, 30, 33, 36], "u": [1, 36], "tell": 1, "look": [1, 33], "like": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 35, 36], "after": [1, 30, 36], "being": [1, 33, 36], "new": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 36], "pretti": 1, "neat": 1, "huh": 1, "rest": [1, 9, 15], "while": [1, 6, 7, 9, 10, 11, 13, 14, 18, 19, 20, 21, 30, 33, 36], "first": [1, 5, 6, 9, 10, 11, 12, 13, 15, 17, 18, 26, 27, 33, 36], "run": [1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19, 28], "itml": [1, 7, 35], "regular": [1, 9, 18, 19, 20, 36], "automat": [1, 30, 36], "semi": [1, 6, 23, 30, 36], "definit": [1, 6, 7, 10, 11, 20, 21, 23, 30, 36], "posit": [1, 2, 4, 6, 7, 10, 11, 13, 18, 20, 21, 23, 25, 30, 33, 36], "condit": 1, "logdet": [1, 6, 36], "diverg": [1, 6, 20, 36], "soft": 1, "must": [1, 6, 9, 11, 12, 13, 15, 20, 25, 32], "link": 1, "cannot": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33], "simpl": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 34, 36], "bregman": [1, 6, 36], "project": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33], "unlik": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "belong": [1, 4, 6, 13, 16, 20, 25, 30, 33, 36], "itml_supervis": [1, 2], "x_itml": 1, "mmc": [1, 14, 32, 33, 35], "an": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 32, 33, 34, 36], "try": [1, 33], "similar": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "ensur": 1, "sum": [1, 10, 13, 16, 33, 36], "dissimilar": [1, 6, 7, 13, 14, 20, 21, 25, 33, 36], "threshold": [1, 6, 13, 14, 20, 25, 35], "done": [1, 6, 13, 15, 20], "optim": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 30, 33, 36], "cost": 1, "subject": [1, 6, 36], "inequ": [1, 30], "mmc_supervis": [1, 33], "x_mmc": 1, "effici": [1, 13, 18, 20, 29, 36], "via": [1, 19, 20, 36], "l_1": 1, "penal": [1, 20, 36], "log": [1, 20, 36], "compar": [1, 6, 13, 15, 20, 25, 33, 36], "exist": [1, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "exploit": 1, "sparsiti": [1, 10, 20, 21, 36], "natur": [1, 10, 36], "underli": [1, 33], "intrins": 1, "sdml": [1, 21, 28, 35], "sdml_supervis": [1, 2, 20], "sparsity_param": [1, 20, 21], "balance_param": [1, 2, 20, 21], "0015": 1, "covari": [1, 2, 6, 7, 10, 11, 13, 14, 16, 20, 21, 35, 36], "x_sdml": 1, "vezelh": [1, 2], "miniconda3": [1, 2], "env": [1, 2], "docenvbi": [1, 2], "lib": [1, 2], "python3": [1, 2], "11": [1, 2, 28, 36], "site": [1, 2], "packag": [1, 2, 28, 29, 30], "_graph_lasso": [1, 2], "py": [1, 2, 3, 28], "329": [1, 2], "futurewarn": [1, 2], "cov_init": [1, 2], "deprec": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "remov": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "doe": [1, 2, 4, 5, 6, 32, 34, 36], "ani": [1, 2, 4, 7, 11, 14, 16, 21, 33, 36], "effect": [1, 2, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 33, 36], "warn": [1, 2, 4], "lsml": [1, 11, 35], "yet": [1, 10, 32, 36], "given": [1, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 25, 26, 27, 30, 36], "comparison": [1, 10, 36], "formul": [1, 6, 18, 30, 36], "loss": [1, 33, 36], "correspond": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 36], "hing": [1, 33, 36], "violat": 1, "lsml_supervis": [1, 2], "tol": [1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 33, 36], "0001": 1, "max_it": [1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 33, 36], "10000": [1, 13, 14, 18, 19, 36], "x_lsml": 1, "nca": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 35], "extremli": 1, "popular": [1, 29, 30], "aim": [1, 15, 30, 33, 36], "find": [1, 30, 33, 36], "linear": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 36], "averag": [1, 33], "loo": 1, "rule": [1, 33], "maxim": [1, 6, 13, 15, 20, 25, 33], "kei": 1, "insight": 1, "A": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 36], "defin": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 36], "differenti": [1, 6, 36], "object": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 36], "iter": [1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19], "solver": [1, 6, 7, 9, 10, 11, 12, 13, 14, 15], "scipi": [1, 28, 33, 36], "fmin_l_bfgs_b": 1, "uniqu": [1, 2], "1000": [1, 6, 7, 9, 10, 11, 12, 15, 33, 36], "x_nca": 1, "lfda": [1, 35], "reduct": [1, 8, 12, 30, 33], "method": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 36], "particularli": [1, 8, 33], "deal": [1, 8, 33], "multimod": [1, 8, 33], "where": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 32, 33, 36], "ore": [1, 8, 33], "consist": [1, 6, 8, 13, 20, 25, 33, 36], "separ": [1, 8, 9, 33], "core": [1, 8, 33], "problem": [1, 6, 8, 13, 18, 33, 35, 36], "solv": [1, 8, 13, 18, 28, 30, 33, 36], "eigenvalu": [1, 6, 8, 13, 33, 36], "n_compon": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33], "x_lfda": 1, "rca": [1, 17, 35], "anoth": [1, 30], "older": 1, "rank": [1, 16, 18, 36], "weight": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "matric": [1, 16, 23, 36], "appli": [1, 16, 24, 32, 33, 36], "global": [1, 16, 36], "assign": [1, 16, 18, 36], "relev": [1, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 36], "low": [1, 6, 13, 15, 16, 20, 25, 33, 36], "irrelev": [1, 16, 36], "those": [1, 9, 12, 15, 16, 33, 36], "estim": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 36], "chunklet": [1, 16, 36], "subset": [1, 16, 36], "known": [1, 16, 36], "rca_supervis": 1, "n_chunk": [1, 4, 17], "30": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "chunk_siz": [1, 4, 17], "x_rca": 1, "previou": 1, "took": 1, "real": [1, 30], "number": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 29, 30, 33, 36], "mlkr": [1, 35], "To": [1, 28, 33, 36], "did": [1, 36], "e": [1, 6, 7, 10, 13, 14, 16, 17, 18, 20, 25, 26, 27, 29, 30, 36], "target": [1, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 33, 36], "model": [1, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 29, 30, 33, 36], "x_reg": 1, "y_reg": 1, "orang": 1, "x_mlkr": 1, "valu": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "would": [1, 29, 30, 36], "improv": [1, 15, 30, 33], "kneighborsregressor": 1, "alwai": [1, 30], "howev": [1, 13, 30, 36], "mani": [1, 30, 33, 36], "applic": [1, 13, 30, 36], "easier": 1, "obtain": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36], "whether": [1, 9, 12, 15, 33, 36], "sampl": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 32, 33, 36], "annot": 1, "face": 1, "imag": [1, 32], "person": 1, "rather": [1, 5, 34, 36], "id": 1, "huge": 1, "databas": [1, 30, 36], "everi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "g": [1, 6, 7, 10, 12, 13, 15, 16, 17, 18, 20, 25, 26, 27, 30, 36], "retriev": [1, 30], "goal": [1, 30, 33, 36], "queri": [1, 30], "notion": 1, "individu": 1, "gather": 1, "fortun": 1, "strength": 1, "abil": 1, "inde": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 36], "ve": 1, "abov": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "altern": [1, 32, 33, 36], "pass": [1, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 33], "want": [1, 6, 10, 13, 20, 25, 36], "arrai": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 35], "well": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 36], "pairs_label": 1, "n_pair": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "word": [1, 30], "further": [1, 10, 35, 36], "kind": 1, "possibl": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "weakli": [1, 7, 10, 13, 18, 19, 21, 29, 30, 32, 35], "detail": [1, 33, 36], "weak": 1, "work": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 36], "purpos": [1, 33, 36], "re": 1, "explicitli": 1, "creat": [1, 7, 11, 14, 17, 19, 21, 32], "pairwis": [1, 6, 7, 10, 13, 20, 25, 33, 36], "through": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 29, 36], "do": [1, 22, 25, 26, 27, 33, 36], "keep": [1, 9, 33, 36], "mind": 1, "know": [1, 32, 36], "actual": 1, "depend": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 33, 36], "hood": [1, 32], "modul": [1, 6, 13, 20, 25, 29], "own": 1, "version": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 35], "ahead": 1, "assum": [1, 18, 36], "create_constraint": 1, "itertool": 1, "aggreg": 1, "indic": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 35], "zero": [1, 2, 9, 15], "ones": [1, 13, 36], "make": [1, 6, 9, 10, 13, 20, 25, 33, 36], "permut": 1, "zeros_": 1, "list": [1, 30], "combin": [1, 4, 33, 36], "ones_": 1, "twos_": 1, "put": [1, 30, 32, 36], "sim": 1, "similarili": 1, "di": 1, "append": 1, "pick": [1, 6, 13, 20, 25], "just": [1, 6, 9, 12, 13, 15, 20, 25, 36], "enough": [1, 4, 33], "len": 1, "return": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 36], "shape": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "vstack": 1, "column_stack": 1, "concaten": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33], "print": [1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21], "9": [1, 2, 6, 10, 13, 18, 33, 36], "10": [1, 18, 19, 33, 36], "77": 1, "65": 1, "72": 1, "55": [1, 16, 36], "71": 1, "again": 1, "longer": 1, "call": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 30, 32, 33, 36], "take": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 34, 36], "preprocessor": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 35], "argument": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 36], "advanc": [1, 36], "result": [1, 36], "manual": [1, 28, 36], "construct": [1, 4, 18, 19, 30, 36], "bit": [1, 18, 19], "old": 1, "too": 1, "specif": [1, 30, 36], "worth": 1, "poke": 1, "around": [1, 33], "file": [1, 3, 32], "exactli": 1, "final": 1, "advantag": 1, "box": 1, "compat": [1, 29, 30, 35], "select": [1, 6, 13, 18, 19, 20, 25, 29, 33, 36], "score": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 35], "transformermixin": [1, 33], "plug": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "procedur": [1, 6, 7, 9, 10, 11, 13, 14], "sinc": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "format": [1, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 36], "describ": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33], "allow": [1, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 28, 29, 30, 32, 36], "slice": 1, "along": 1, "could": 1, "bring": 1, "tutori": [1, 30], "fun": 1, "total": [1, 2, 3, 33], "time": [1, 2, 6, 7, 17, 33, 36], "script": [1, 2], "minut": [1, 2], "32": [1, 3], "400": [1, 3], "second": [1, 2, 6, 10, 13, 18, 26, 27, 36], "plot_metric_learning_exampl": [1, 3], "ipynb": [1, 2], "exampl": [2, 5, 18, 19, 26, 27, 28, 29, 30, 32, 33, 34, 36], "from": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 36], "http": [2, 10, 20, 28, 33, 36], "nbviewer": 2, "ipython": 2, "org": [2, 33], "6576096": 2, "import": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 36], "pairwise_dist": 2, "nearestneighbor": 2, "sandwich_demo": 2, "sandwich_data": 2, "knn": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33], "nearest_neighbor": 2, "ax": 2, "subplot": 2, "whole": [2, 32], "row": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "plot_sandwich_data": 2, "plot_neighborhood_graph": 2, "set_titl": 2, "set_aspect": 2, "equal": [2, 4, 6, 9, 12, 13, 15, 18, 20, 25, 33, 36], "set_xtick": 2, "set_ytick": 2, "ml": 2, "n_constraint": [2, 4, 6, 7, 10, 11, 13, 14, 17, 18, 20, 21, 25, 26, 27, 33], "200": [2, 7, 11, 14, 20, 33], "001": [2, 6, 7, 9, 10, 11, 13, 36], "ax_num": 2, "enumer": 2, "start": [2, 29], "fit": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 34, 35], "tx": 2, "transform": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 30, 34, 35], "ml_knn": 2, "axi": 2, "__class__": 2, "__name__": 2, "todo": 2, "somewher": 2, "visualize_class_separ": 2, "_": [2, 33, 36], "ax1": 2, "ax2": 2, "ncol": 2, "label_ord": 2, "argsort": 2, "imshow": 2, "interpol": 2, "nearest": [2, 4, 8, 9, 15, 19, 28, 30, 33], "none": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 36], "kneighbor": 2, "return_dist": 2, "fals": [2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 33, 36], "distinct": 2, "num_class": [2, 7, 11, 14, 21], "num_point": 2, "layer": 2, "dist": 2, "7": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 36], "dtype": 2, "float": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 25, 26, 27], "int": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33], "x_center": 2, "arang": 2, "y_center": 2, "yc": 2, "xc": 2, "normal": [2, 9, 12, 15, 36], "reshap": 2, "ravel": [2, 32], "color": 2, "rbgmky": 2, "idx": 2, "val": 2, "xi": 2, "50": [2, 9], "facecolor": 2, "edgecolor": 2, "nn": [2, 30], "b": [2, 4, 6, 7, 33, 36], "plot": [2, 6, 13, 20, 25], "__main__": 2, "224": 2, "userwarn": 2, "onli": [2, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 28, 30, 34, 36], "199": 2, "request": [2, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "314": [2, 3], "plot_sandwich": [2, 3], "00": 3, "35": 3, "715": 3, "execut": 3, "auto_exampl": 3, "mb": 3, "03": 3, "partial_label": 4, "build": [4, 11, 33], "ndarrai": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "unknown": [4, 33], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 33], "__init__": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "chunk": [4, 16, 17, 36], "random_st": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 33, 36], "num_chunk": [4, 17], "compos": 4, "drawn": 4, "size": [4, 36], "valueerror": 4, "rais": [4, 6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27, 32], "option": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 32, 36], "default": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "randomst": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 36], "pseudo": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30], "renam": [4, 6, 7, 9, 11, 13, 14, 17, 21], "Will": [4, 6, 7, 9, 11, 13, 14, 17, 21], "1d": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 36], "generate_knntriplet": 4, "k_genuin": [4, 19], "k_impostor": [4, 19], "triplet": [4, 18, 19, 27, 30, 35], "x_a": [4, 18, 27], "x_b": [4, 18, 27], "x_c": [4, 18, 27], "doesn": [4, 16, 18, 19], "yield": [4, 6, 13, 18, 19, 20, 25, 36], "maximum": [4, 6, 7, 9, 10, 11, 13, 14, 15], "genuin": 4, "impostor": 4, "n": [4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 19, 21, 24, 33, 36], "singl": [4, 7, 11, 14, 16, 17, 19, 21], "taken": 4, "account": 4, "positive_negative_pair": [4, 33], "same_length": [4, 33], "num_constraint": [4, 7, 11, 14, 21], "neg": [4, 6, 13, 18, 20, 25, 30, 33], "form": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 35], "randomli": [4, 7, 11, 14, 17, 18, 21, 33], "draw": 4, "smaller": [4, 9, 12, 15, 30], "bool": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "forc": [4, 33], "ignor": [4, 6, 7, 10, 13, 14, 16, 17, 18, 20, 25, 26, 27], "larger": [4, 22, 25, 26, 27, 33, 36], "set": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 35, 36], "left": [4, 33, 36], "element": [4, 17, 18, 20, 27, 30, 36], "right": [4, 10, 18, 26, 27, 33, 36], "baselin": [5, 34], "anyth": [5, 34], "calcul": [5, 33, 34, 36], "introduc": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "On": [5, 34], "statist": [5, 6, 13, 20, 25, 34], "p": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 34, 36], "mahalanobi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 34, 35, 36], "1936": [5, 34], "dataset": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 36], "load_iri": [5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 28, 33, 34, 36], "iri": [5, 28, 34], "cov": [5, 34], "components_": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "l": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 29, 30, 33, 36], "deduc": [5, 6, 7, 10, 11, 13, 14, 18, 19, 20, 21], "components_from_metr": [5, 6, 7, 10, 11, 13, 14, 20, 21], "unus": 5, "fit_param": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "n_output": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "unsupervis": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 29, 35], "dict": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "addit": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "x_new": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 33, 36], "n_features_new": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "get_mahalanobis_matrix": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 36], "copi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "learner": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 36], "get_metadata_rout": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "metadata": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "rout": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "pleas": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "mechan": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "metadatarequest": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "encapsul": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "inform": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 36], "get_metr": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "output": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33], "independ": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "modifi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "initi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "directli": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "metric_fun": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "pair_dist": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "sever": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 36], "therefor": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "chang": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "besid": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "pair_scor": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "kneighborsclassifi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], "auto": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "leaf_siz": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "mahalanobismixin": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27], "local": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "0x": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "metric_param": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "n_job": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "uniform": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "get_param": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "deep": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "subobject": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "param": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "name": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "map": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "d_m": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "x_e": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "3d": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 35], "henc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 36], "opposit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "score_pair": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "instead": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 36], "refer": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 33, 34, 36], "occur": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "add": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "don": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "necessarili": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30], "set_output": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "api": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 29, 30, 35], "panda": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "configur": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "datafram": [5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21], "unchang": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27], "self": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "set_param": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "nest": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "latter": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "compon": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 33, 36], "__": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "updat": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "emb": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "insid": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 36], "dot": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "gamma": [6, 7, 18, 19], "ident": [6, 7, 9, 10, 11, 12, 13, 14, 15, 20, 21, 30, 36], "verbos": [6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 33, 36], "convergence_threshold": [6, 7, 13, 14], "theoret": [6, 7, 33, 36], "rel": [6, 9, 10, 11, 36], "entropi": [6, 36], "aka": [6, 36], "kullback": [6, 36], "leibler": [6, 36], "multivari": [6, 36], "gaussian": [6, 33, 36], "associ": [6, 30, 36], "handl": [6, 36], "wide": [6, 36], "varieti": [6, 36], "incorpor": [6, 36], "reli": [6, 36], "slack": [6, 7], "variabl": [6, 7], "converg": [6, 9, 10, 11, 12, 13, 14, 15], "toler": [6, 7, 9, 10, 11, 12, 15], "string": [6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21], "should": [6, 7, 10, 11, 13, 16, 17, 18, 20, 21, 25, 26, 27, 32, 33, 36], "strictli": [6, 7, 9, 10, 11, 12, 15, 20, 21, 30], "pd": [6, 7, 10, 11, 20, 21], "invers": [6, 7, 10, 11, 13, 14, 20, 21, 36], "spd": [6, 7, 13, 14, 21], "make_spd_matrix": [6, 7, 10, 11, 13, 14, 20, 21], "callabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 35, 36], "tupl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 30, 32, 33, 35], "jason": [6, 36], "v": [6, 36], "davi": [6, 36], "et": [6, 10, 16, 20, 29, 33, 36], "al": [6, 10, 16, 20, 29, 33, 36], "icml": [6, 20, 36], "2007": [6, 8, 12, 33, 36], "matter": [6, 13, 36], "bounds_": [6, 7], "bound": [6, 7, 36], "asid": [6, 7, 36], "5th": [6, 7], "95th": [6, 7], "percentil": [6, 7], "present": [6, 10, 18, 26, 27], "n_iter_": [6, 7, 9, 10, 11, 12, 13, 14, 15], "ha": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 26, 27, 30, 33, 36], "threshold_": [6, 13, 20, 25], "lower": [6, 10, 13, 18, 20, 25, 26, 27, 36], "classifi": [6, 10, 13, 18, 20, 25, 26, 27, 33], "otherwis": [6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 20, 25, 26, 27, 32, 36], "calibrate_threshold": [6, 13, 20, 25, 36], "pairs_valid": [6, 13, 20, 25], "y_valid": [6, 13, 20, 25], "strategi": [6, 13, 20, 25], "accuraci": [6, 10, 13, 15, 18, 20, 25, 26, 27, 33, 36], "min_rat": [6, 13, 20, 25], "beta": [6, 13, 18, 19, 20, 25, 36], "decis": [6, 13, 20, 25], "calibr": [6, 13, 20, 25, 36], "binari": [6, 13, 20, 25, 36], "cutoff": [6, 13, 20, 25], "predict": [6, 10, 13, 18, 20, 25, 26, 27, 32, 33, 35], "tradit": [6, 13, 20, 25], "evalu": [6, 13, 20, 25, 28, 36], "rate": [6, 9, 13, 18, 19, 20, 25], "f": [6, 13, 18, 19, 20, 25, 32, 36], "chosen": [6, 9, 12, 13, 15, 20, 25], "str": [6, 7, 8, 10, 13, 16, 17, 18, 20, 25, 26, 27], "choos": [6, 13, 20, 25, 30], "f_beta": [6, 13, 20, 25], "max_tpr": [6, 13, 20, 25], "highest": [6, 13, 20, 25], "least": [6, 10, 11, 13, 20, 25], "max_tnr": [6, 13, 20, 25], "specifi": [6, 13, 17, 20, 25, 32, 36], "respect": [6, 13, 20, 25, 30, 33, 36], "n_pairs_valid": [6, 13, 20, 25], "receiv": [6, 13, 20, 25], "oper": [6, 13, 20, 25], "characterist": [6, 13, 20, 25], "roc": [6, 13, 20, 25], "fundament": [6, 13, 20, 25], "tool": [6, 13, 20, 25], "clinic": [6, 13, 20, 25], "medicin": [6, 13, 20, 25], "mh": [6, 13, 20, 25], "zweig": [6, 13, 20, 25], "campbel": [6, 13, 20, 25], "chemistri": [6, 13, 20, 25], "1993": [6, 13, 20, 25], "pr": [6, 13, 20, 25], "10117": [6, 13, 20, 25], "classes_": [6, 10, 13, 18, 20, 25, 26, 27], "decision_funct": [6, 10, 13, 18, 20, 25, 26, 27, 36], "ideal": [6, 13, 20, 25], "y_predict": [6, 13, 20, 25], "calibration_param": [6, 13, 20], "trainset": [6, 13, 20], "dictionari": [6, 13, 20], "give": [6, 13, 20, 32, 33, 36], "step": [6, 13, 14, 20], "roc_auc": [6, 13, 20, 25], "inferior": [6, 13, 20, 25], "count": [6, 13, 20, 25], "classic": [6, 13, 20, 25, 30, 32, 36], "curv": [6, 13, 20, 25], "set_decision_function_request": [6, 10, 13, 18, 20, 25, 26, 27], "enable_metadata_rout": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "set_config": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "meta": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "alia": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "util": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "metadata_rout": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "retain": [6, 7, 10, 13, 16, 17, 18, 20, 25, 26, 27], "set_fit_request": [6, 7, 10, 13, 16, 17, 18, 20], "set_predict_request": [6, 10, 13, 18, 20, 25, 26, 27], "set_score_request": [6, 10, 13, 18, 20, 25, 26, 27], "set_threshold": [6, 13, 20, 25, 36], "test": [6, 13, 20, 25, 28, 36], "superior": [6, 13, 20, 25], "_pairsclassifi": [6, 13, 20, 25], "supervis": [7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 21, 29, 30, 32, 35], "iris_data": [7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 33], "embedding_typ": 8, "fisher": [8, 33], "discrimin": [8, 9, 15, 19, 33], "analysi": [8, 15, 16, 17, 33, 36], "cluster": [8, 13, 14, 19, 30, 33, 36], "reduc": [8, 9, 12, 15, 16, 17, 30], "min": [8, 9, 12, 15], "type": [8, 30, 32, 33, 36], "eigenvector": [8, 33], "orthonorm": 8, "plain": [8, 33, 36], "raw": 8, "masashi": 8, "sugiyama": [8, 33], "jmlr": [8, 33, 36], "yuan": [8, 29], "tang": [8, 29, 33], "beer": [8, 33], "style": [8, 33], "dim": [8, 33], "init": [9, 10, 11, 12, 13, 14, 15, 21, 33, 36], "min_it": 9, "07": [9, 36], "convergence_tol": 9, "larg": [9, 16, 33, 36], "margin": [9, 33, 36], "attempt": [9, 33], "assumpt": [9, 13, 33, 36], "distribut": [9, 12, 13, 15, 33, 36], "pca": [9, 12, 15, 33], "n_features_a": [9, 12, 15], "n_features_b": [9, 12, 15], "reason": [9, 12, 15], "lda": [9, 15, 19], "meaning": [9, 12, 15], "direct": [9, 12, 15], "varianc": [9, 12, 15], "princip": [9, 12, 15], "decomposit": [9, 12, 15, 23, 33], "discriminant_analysi": [9, 15], "lineardiscriminantanalysi": [9, 15], "truncat": [9, 12, 15], "standard": [9, 12, 15, 30, 33], "match": [9, 12, 15, 33, 36], "less": [9, 12, 15, 33, 36], "includ": 9, "edg": 9, "minimum": [9, 33], "vari": 9, "stop": 9, "progress": [9, 12, 15], "pull": 9, "push": [9, 30], "term": [9, 36], "mean": [9, 30, 33, 36], "q": [9, 12], "weinberg": [9, 12, 33], "j": [9, 15, 16, 33, 36], "blitzer": 9, "saul": 9, "nip": [9, 13, 15, 33, 36], "2005": [9, 15, 33, 36], "squar": [10, 11, 13, 18, 33, 36], "residu": [10, 11, 36], "propos": [10, 36], "thu": [10, 13, 30, 36], "infeas": [10, 36], "deploi": [10, 36], "furthermor": [10, 36], "extens": [10, 36], "lead": [10, 13, 29, 30, 33, 36], "stabl": [10, 36], "amount": [10, 36], "liu": [10, 36], "icdm": [10, 36], "2012": [10, 30, 36], "adapt": [10, 18, 19, 20, 36], "gist": [10, 20, 36], "github": [10, 20, 28, 36], "kcarnold": [10, 20, 36], "5439917": [10, 36], "quadruplet": [10, 11, 26, 30, 33, 35], "minu": [10, 18, 26, 27, 36], "probabl": [10, 18, 26, 27, 33, 36], "n_quadruplet": [10, 26], "four": [10, 26], "factor": 10, "record": [10, 26, 36], "correctli": [10, 18, 26, 27, 33], "last": [10, 11, 18, 26, 27, 28, 33, 36], "kernel": [12, 33], "regress": [12, 30, 33], "view": [12, 33], "variat": [12, 33], "cap": 12, "conjug": 12, "gradient": 12, "messag": [12, 15], "tesauto": 12, "aistat": [12, 33], "max_proj": [13, 14, 36], "diagon": [13, 14, 20, 36], "diagonal_c": [13, 14, 36], "greater": [13, 36], "minima": [13, 36], "free": [13, 36], "involv": [13, 36], "speed": [13, 36], "bottleneck": [13, 36], "been": [13, 36], "implicit": [13, 36], "compact": [13, 32, 36], "unimod": [13, 36], "restrict": [13, 36], "earliest": [13, 36], "still": [13, 18, 19, 36], "often": [13, 30, 36], "cite": [13, 36], "techniqu": [13, 36], "coeffici": [13, 14], "gotten": [13, 20, 22], "xing": [13, 36], "jordan": 13, "russel": 13, "ng": 13, "side": [13, 36], "2002": [13, 16, 36], "06": 14, "neighborhood": [15, 33], "stochast": [15, 18, 33, 36], "variant": [15, 33], "fast": [15, 33], "goldberg": [15, 33], "hinton": 15, "rowei": 15, "r": [15, 36], "salakhutdinov": 15, "neighbourhood": [15, 33], "wikipedia": [15, 33, 34], "entri": [15, 29, 33, 36], "scalar": 15, "noam": 16, "shental": [16, 36], "adjust": [16, 36], "eccv": [16, 36], "05": [16, 18, 19, 36], "95": [16, 36], "repeat": 17, "process": [17, 33], "constructor": 17, "Not": 17, "basi": [18, 19, 36], "triplet_diff": 18, "n_basi": [18, 19], "005": [18, 19], "output_it": [18, 19], "500": [18, 19], "batch_siz": [18, 19], "spars": [18, 19, 20, 21, 36], "composit": [18, 19, 36], "psd": [18, 23, 30, 36], "scheme": [18, 36], "experiment": [18, 19], "hesit": [18, 19], "report": [18, 19], "someth": [18, 19], "fail": [18, 19], "expect": [18, 19], "l1": [18, 19, 20, 36], "great": 18, "5e": [18, 19], "5000": [18, 19], "current": [18, 19, 30, 33, 36], "scml_supervis": 18, "shi": [18, 19, 36], "bellet": [18, 19, 29, 36], "sha": [18, 19, 36], "aaai": [18, 19, 36], "2014": [18, 19, 36], "matlab": [18, 19, 36], "_components_from_basis_weight": [18, 19], "n_triplet": [18, 27], "three": [18, 27, 30, 36], "scml": [19, 35], "neighbour": 19, "signific": 19, "region": [19, 33], "center": 19, "100000": [19, 36], "33": 19, "84640733": 19, "55984363": 19, "8464073327922157": 19, "01": [20, 21, 36], "doubl": [20, 36], "off": [20, 21, 36], "mathbf": [20, 33, 36], "determin": [20, 36], "m_0": [20, 36], "either": [20, 28, 30, 33, 36], "omega": [20, 36], "trade": [20, 21], "m0": [20, 21], "graph_lasso": [20, 21], "qi": [20, 36], "2009": [20, 33, 36], "5439945": [20, 36], "abstract": [22, 24, 25, 26, 27], "avail": [22, 25, 26, 27, 30], "thrown": [22, 25, 26, 27], "simpli": [22, 25, 26, 27, 30, 36], "access": [22, 25, 26, 27, 30], "column": [23, 32], "vector": [23, 30, 36], "symmetr": 23, "express": 23, "decompos": [23, 30], "product": 23, "transpos": 23, "svd": 23, "choleski": 23, "xl": 24, "anaconda": 28, "conda": 28, "forg": 28, "pypi": 28, "latest": 28, "repositori": 28, "mai": [28, 30, 36], "pytest": 28, "support": 28, "wa": 28, "v0": 28, "17": 28, "21": [28, 29, 36], "skggm": 28, "problemat": 28, "commit": 28, "a0ed406": 28, "git": 28, "a0ed406586c4364ea3297a658f415e13b5cbdaf8": 28, "load": 28, "model_select": [28, 33, 36], "cross_val_scor": [28, 33, 36], "make_pipelin": 28, "return_x_i": [28, 36], "As": 29, "part": 29, "contrib": 29, "librari": [29, 30], "routin": [29, 33, 36], "etc": [29, 30, 32, 33, 36], "unifi": 29, "scientif": 29, "public": 29, "appreci": 29, "citat": 29, "paper": [29, 36], "journal": 29, "research": 29, "138": 29, "2020": 29, "bibtex": 29, "articl": 29, "titl": 29, "etric": 29, "earn": 29, "lgorithm": 29, "ython": 29, "carei": 29, "cj": 29, "vauquier": 29, "nathali": 29, "aur": 29, "lien": 29, "year": 29, "volum": 29, "page": [29, 34], "setup": 29, "quick": 29, "content": 29, "index": [29, 32], "search": 29, "approach": 30, "tradition": 30, "practition": 30, "citi": 30, "block": 30, "cosin": 30, "priori": 30, "domain": 30, "difficult": 30, "suit": 30, "interest": 30, "manner": 30, "variou": 30, "fall": 30, "categori": 30, "broadli": 30, "speak": 30, "level": 30, "typic": 30, "weaker": [30, 36], "seek": 30, "agreement": 30, "num_dim": 30, "lx": [30, 33], "recov": 30, "seen": 30, "properti": 30, "non": 30, "symmetri": 30, "triangl": 30, "indiscern": 30, "parameter": [30, 36], "fact": 30, "both": [30, 33], "equival": [30, 36], "practic": 30, "There": 30, "few": 30, "anomali": 30, "detect": 30, "bia": 30, "toward": 30, "intend": 30, "semant": [30, 33, 36], "closest": 30, "feed": 30, "realiz": 30, "joint": 30, "hyperparamet": 30, "tune": 30, "resourc": 30, "vision": 30, "2015": 30, "survei": 30, "structur": [30, 36], "2013": 30, "book": 30, "instanti": 32, "fill": 32, "represent": [32, 36], "accept": 32, "abl": [32, 36], "replac": 32, "23": [32, 36], "43": 32, "49": 32, "14": 32, "37": 32, "points_indic": 32, "pairs_indic": [32, 36], "y_pair": [32, 36], "Then": [32, 33, 36], "realli": 32, "repres": [32, 33, 36], "lazili": 32, "store": 32, "system": 32, "onc": [32, 33], "find_imag": 32, "file_path": 32, "datapoint": 32, "row_stack": 32, "imread": 32, "img01": 32, "png": 32, "img00": 32, "img02": 32, "pairs_images_path": 32, "pairs_ind": 32, "stai": 32, "preprocessor_wip": 32, "notimplementederror": 32, "noth": 32, "distant": 33, "essenti": 33, "dog": 33, "cat": 33, "anim": 33, "91884732": 33, "25406973": 33, "1545886": 33, "80350083": 33, "our": [33, 36], "49627072": [33, 36], "65287282": [33, 36], "06079877": [33, 36], "Or": [33, 36], "coordin": [33, 36], "similarli": [33, 36], "spatial": [33, 36], "4962707194621285": 33, "43680409": 33, "89169412": 33, "9542479": 33, "baseestim": 33, "gridsearchcv": [33, 36], "min_": [33, 36], "sum_": [33, 36], "eta_": 33, "ij": [33, 36], "x_i": [33, 36], "x_j": [33, 36], "y_": 33, "x_l": 33, "_i": [33, 36], "_j": [33, 36], "_l": [33, 36], "within": [33, 36], "cdot": [33, 36], "max": 33, "p_": 33, "softmax": 33, "likelihood": 33, "frac": [33, 36], "exp": [33, 36], "_2": [33, 36], "neq": 33, "qquad": [33, 36], "ii": 33, "y_j": 33, "y_i": 33, "text": [33, 36], "argmax": 33, "sum_i": 33, "p_i": 33, "idea": 33, "en": 33, "wiki": 33, "linear_discriminant_analysi": 33, "multi": 33, "modal": 33, "w": [33, 36], "fashion": 33, "nw_": 33, "w_": 33, "begin": [33, 36], "align": [33, 36], "n_l": 33, "th": 33, "affin": 33, "deriv": 33, "arg": 33, "max_": 33, "tr": [33, 36], "That": 33, "nearbi": 33, "made": 33, "apart": 33, "impos": 33, "ldfa": 33, "suffer": 33, "sign": 33, "indeterminaci": 33, "state": 33, "relat": [33, 36], "ran": 33, "might": [33, 36], "hereaft": 33, "focu": 33, "exposit": 33, "empir": 33, "develop": 33, "denot": [33, 36], "k_": 33, "pi": 33, "sigma": 33, "transit": 33, "tl": 33, "sake": [33, 36], "simplic": [33, 36], "cumul": 33, "quadrat": 33, "mathcal": 33, "hat": [33, 36], "y_jk_": 33, "_supervis": 33, "interpret": [33, 36], "discard": 33, "sometim": 33, "lenght": 33, "unlabel": 34, "zca": 34, "whiten": 34, "judgment": 36, "paragraph": 36, "These": 36, "theses": 36, "ex": 36, "appropri": 36, "my_algo": 36, "split": 36, "train_test_split": 36, "pairs_train": 36, "pairs_test": 36, "y_train": 36, "y_test": 36, "n_tupl": 36, "tuple_s": 36, "artifici": 36, "12": 36, "19": 36, "16": 36, "02": 36, "58": 36, "93": 36, "89": 36, "34": 36, "41": 36, "recommend": 36, "redund": 36, "comment": 36, "lot": 36, "memori": 36, "replic": 36, "collect": 36, "loos": 36, "tuples_indic": 36, "fetch": 36, "path": 36, "filesystem": 36, "wise": 36, "a0": 36, "24667162e": 36, "62622348e": 36, "88325421e": 36, "08": 36, "61531114e": 36, "86778289e": 36, "12654397e": 36, "27607365": 36, "88853014": 36, "276073646278203": 36, "58603894": 36, "69883982": 36, "66614919": 36, "41743549": 36, "20219519": 36, "73697721": 36, "rng": 36, "randint": 36, "next": 36, "unseen": 36, "15": 36, "75": 36, "threshold_param": 36, "caus": 36, "overfit": 36, "avoid": 36, "f1": 36, "12811124": 36, "74750256": 36, "common": 36, "accuracy_scor": 36, "roc_auc_scor": 36, "z": 36, "d_": 36, "mu": 36, "constant": 36, "textbf": 36, "kl": 36, "_0": 36, "ell": 36, "mathrm": 36, "m_": 36, "operatornam": 36, "det": 36, "quad": 36, "leq": 36, "geq": 36, "upper": 36, "www": 36, "utexa": 36, "edu": 36, "pjain": 36, "eta": 36, "xlx": 36, "lambda": 36, "_1": 36, "_n": 36, "incid": 36, "laplacian": 36, "whose": 36, "norm": 36, "n_j": 36, "ji": 36, "bar": 36, "hillel": 36, "2003": 36, "constrain": 36, "mathbb": 36, "2_": 36, "cmu": 36, "7eepx": 36, "old_pap": 36, "code_metric_onlin": 36, "tar": 36, "gz": 36, "third": 36, "triplets_indic": 36, "upcom": 36, "triplets_test": 36, "likeli": 36, "75700306": 36, "98982131": 36, "f1_score": 36, "proport": 36, "built": 36, "b_i": 36, "w_i": 36, "diag": 36, "nonneg": 36, "fix": 36, "over": 36, "ell_1": 36, "ad": 36, "x_k": 36, "d_w": 36, "quadruplets_indic": 36, "quadruplets_test": 36, "_k": 36, "h": 36, "suggest": 36, "confid": 36, "extra": 36, "experi": 36, "plu": 36, "ld": 36, "mm_0": 36}, "objects": {"metric_learn": [[4, 0, 1, "", "Constraints"], [5, 0, 1, "", "Covariance"], [6, 0, 1, "", "ITML"], [7, 0, 1, "", "ITML_Supervised"], [8, 0, 1, "", "LFDA"], [9, 0, 1, "", "LMNN"], [10, 0, 1, "", "LSML"], [11, 0, 1, "", "LSML_Supervised"], [12, 0, 1, "", "MLKR"], [13, 0, 1, "", "MMC"], [14, 0, 1, "", "MMC_Supervised"], [15, 0, 1, "", "NCA"], [16, 0, 1, "", "RCA"], [17, 0, 1, "", "RCA_Supervised"], [18, 0, 1, "", "SCML"], [19, 0, 1, "", "SCML_Supervised"], [20, 0, 1, "", "SDML"], [21, 0, 1, "", "SDML_Supervised"]], "metric_learn.Constraints": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "chunks"], [4, 1, 1, "", "generate_knntriplets"], [4, 1, 1, "", "positive_negative_pairs"]], "metric_learn.Covariance": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "fit"], [5, 1, 1, "", "fit_transform"], [5, 1, 1, "", "get_mahalanobis_matrix"], [5, 1, 1, "", "get_metadata_routing"], [5, 1, 1, "", "get_metric"], [5, 1, 1, "", "get_params"], [5, 1, 1, "", "pair_distance"], [5, 1, 1, "", "pair_score"], [5, 1, 1, "", "score_pairs"], [5, 1, 1, "", "set_output"], [5, 1, 1, "", "set_params"], [5, 1, 1, "", "transform"]], "metric_learn.ITML": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "calibrate_threshold"], [6, 2, 1, "", "classes_"], [6, 1, 1, "", "decision_function"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "get_mahalanobis_matrix"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_metric"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "pair_distance"], [6, 1, 1, "", "pair_score"], [6, 1, 1, "", "predict"], [6, 1, 1, "", "score"], [6, 1, 1, "", "score_pairs"], [6, 1, 1, "", "set_decision_function_request"], [6, 1, 1, "", "set_fit_request"], [6, 1, 1, "", "set_params"], [6, 1, 1, "", "set_predict_request"], [6, 1, 1, "", "set_score_request"], [6, 1, 1, "", "set_threshold"], [6, 1, 1, "", "transform"]], "metric_learn.ITML_Supervised": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "fit_transform"], [7, 1, 1, "", "get_mahalanobis_matrix"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_metric"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "pair_distance"], [7, 1, 1, "", "pair_score"], [7, 1, 1, "", "score_pairs"], [7, 1, 1, "", "set_fit_request"], [7, 1, 1, "", "set_output"], [7, 1, 1, "", "set_params"], [7, 1, 1, "", "transform"]], "metric_learn.LFDA": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "fit_transform"], [8, 1, 1, "", "get_mahalanobis_matrix"], [8, 1, 1, "", "get_metadata_routing"], [8, 1, 1, "", "get_metric"], [8, 1, 1, "", "get_params"], [8, 1, 1, "", "pair_distance"], [8, 1, 1, "", "pair_score"], [8, 1, 1, "", "score_pairs"], [8, 1, 1, "", "set_output"], [8, 1, 1, "", "set_params"], [8, 1, 1, "", "transform"]], "metric_learn.LMNN": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "fit"], [9, 1, 1, "", "fit_transform"], [9, 1, 1, "", "get_mahalanobis_matrix"], [9, 1, 1, "", "get_metadata_routing"], [9, 1, 1, "", "get_metric"], [9, 1, 1, "", "get_params"], [9, 1, 1, "", "pair_distance"], [9, 1, 1, "", "pair_score"], [9, 1, 1, "", "score_pairs"], [9, 1, 1, "", "set_output"], [9, 1, 1, "", "set_params"], [9, 1, 1, "", "transform"]], "metric_learn.LSML": [[10, 1, 1, "", "__init__"], [10, 2, 1, "", "classes_"], [10, 1, 1, "", "decision_function"], [10, 1, 1, "", "fit"], [10, 1, 1, "", "get_mahalanobis_matrix"], [10, 1, 1, "", "get_metadata_routing"], [10, 1, 1, "", "get_metric"], [10, 1, 1, "", "get_params"], [10, 1, 1, "", "pair_distance"], [10, 1, 1, "", "pair_score"], [10, 1, 1, "", "predict"], [10, 1, 1, "", "score"], [10, 1, 1, "", "score_pairs"], [10, 1, 1, "", "set_decision_function_request"], [10, 1, 1, "", "set_fit_request"], [10, 1, 1, "", "set_params"], [10, 1, 1, "", "set_predict_request"], [10, 1, 1, "", "set_score_request"], [10, 1, 1, "", "transform"]], "metric_learn.LSML_Supervised": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "fit"], [11, 1, 1, "", "fit_transform"], [11, 1, 1, "", "get_mahalanobis_matrix"], [11, 1, 1, "", "get_metadata_routing"], [11, 1, 1, "", "get_metric"], [11, 1, 1, "", "get_params"], [11, 1, 1, "", "pair_distance"], [11, 1, 1, "", "pair_score"], [11, 1, 1, "", "score_pairs"], [11, 1, 1, "", "set_output"], [11, 1, 1, "", "set_params"], [11, 1, 1, "", "transform"]], "metric_learn.MLKR": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "fit"], [12, 1, 1, "", "fit_transform"], [12, 1, 1, "", "get_mahalanobis_matrix"], [12, 1, 1, "", "get_metadata_routing"], [12, 1, 1, "", "get_metric"], [12, 1, 1, "", "get_params"], [12, 1, 1, "", "pair_distance"], [12, 1, 1, "", "pair_score"], [12, 1, 1, "", "score_pairs"], [12, 1, 1, "", "set_output"], [12, 1, 1, "", "set_params"], [12, 1, 1, "", "transform"]], "metric_learn.MMC": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "calibrate_threshold"], [13, 2, 1, "", "classes_"], [13, 1, 1, "", "decision_function"], [13, 1, 1, "", "fit"], [13, 1, 1, "", "get_mahalanobis_matrix"], [13, 1, 1, "", "get_metadata_routing"], [13, 1, 1, "", "get_metric"], [13, 1, 1, "", "get_params"], [13, 1, 1, "", "pair_distance"], [13, 1, 1, "", "pair_score"], [13, 1, 1, "", "predict"], [13, 1, 1, "", "score"], [13, 1, 1, "", "score_pairs"], [13, 1, 1, "", "set_decision_function_request"], [13, 1, 1, "", "set_fit_request"], [13, 1, 1, "", "set_params"], [13, 1, 1, "", "set_predict_request"], [13, 1, 1, "", "set_score_request"], [13, 1, 1, "", "set_threshold"], [13, 1, 1, "", "transform"]], "metric_learn.MMC_Supervised": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "fit"], [14, 1, 1, "", "fit_transform"], [14, 1, 1, "", "get_mahalanobis_matrix"], [14, 1, 1, "", "get_metadata_routing"], [14, 1, 1, "", "get_metric"], [14, 1, 1, "", "get_params"], [14, 1, 1, "", "pair_distance"], [14, 1, 1, "", "pair_score"], [14, 1, 1, "", "score_pairs"], [14, 1, 1, "", "set_output"], [14, 1, 1, "", "set_params"], [14, 1, 1, "", "transform"]], "metric_learn.NCA": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "fit"], [15, 1, 1, "", "fit_transform"], [15, 1, 1, "", "get_mahalanobis_matrix"], [15, 1, 1, "", "get_metadata_routing"], [15, 1, 1, "", "get_metric"], [15, 1, 1, "", "get_params"], [15, 1, 1, "", "pair_distance"], [15, 1, 1, "", "pair_score"], [15, 1, 1, "", "score_pairs"], [15, 1, 1, "", "set_output"], [15, 1, 1, "", "set_params"], [15, 1, 1, "", "transform"]], "metric_learn.RCA": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "fit"], [16, 1, 1, "", "fit_transform"], [16, 1, 1, "", "get_mahalanobis_matrix"], [16, 1, 1, "", "get_metadata_routing"], [16, 1, 1, "", "get_metric"], [16, 1, 1, "", "get_params"], [16, 1, 1, "", "pair_distance"], [16, 1, 1, "", "pair_score"], [16, 1, 1, "", "score_pairs"], [16, 1, 1, "", "set_fit_request"], [16, 1, 1, "", "set_output"], [16, 1, 1, "", "set_params"], [16, 1, 1, "", "transform"]], "metric_learn.RCA_Supervised": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "fit"], [17, 1, 1, "", "fit_transform"], [17, 1, 1, "", "get_mahalanobis_matrix"], [17, 1, 1, "", "get_metadata_routing"], [17, 1, 1, "", "get_metric"], [17, 1, 1, "", "get_params"], [17, 1, 1, "", "pair_distance"], [17, 1, 1, "", "pair_score"], [17, 1, 1, "", "score_pairs"], [17, 1, 1, "", "set_fit_request"], [17, 1, 1, "", "set_output"], [17, 1, 1, "", "set_params"], [17, 1, 1, "", "transform"]], "metric_learn.SCML": [[18, 1, 1, "", "__init__"], [18, 2, 1, "", "classes_"], [18, 1, 1, "", "decision_function"], [18, 1, 1, "", "fit"], [18, 1, 1, "", "get_mahalanobis_matrix"], [18, 1, 1, "", "get_metadata_routing"], [18, 1, 1, "", "get_metric"], [18, 1, 1, "", "get_params"], [18, 1, 1, "", "pair_distance"], [18, 1, 1, "", "pair_score"], [18, 1, 1, "", "predict"], [18, 1, 1, "", "score"], [18, 1, 1, "", "score_pairs"], [18, 1, 1, "", "set_decision_function_request"], [18, 1, 1, "", "set_fit_request"], [18, 1, 1, "", "set_params"], [18, 1, 1, "", "set_predict_request"], [18, 1, 1, "", "set_score_request"], [18, 1, 1, "", "transform"]], "metric_learn.SCML_Supervised": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "fit"], [19, 1, 1, "", "fit_transform"], [19, 1, 1, "", "get_mahalanobis_matrix"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_metric"], [19, 1, 1, "", "get_params"], [19, 1, 1, "", "pair_distance"], [19, 1, 1, "", "pair_score"], [19, 1, 1, "", "score_pairs"], [19, 1, 1, "", "set_output"], [19, 1, 1, "", "set_params"], [19, 1, 1, "", "transform"]], "metric_learn.SDML": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "calibrate_threshold"], [20, 2, 1, "", "classes_"], [20, 1, 1, "", "decision_function"], [20, 1, 1, "", "fit"], [20, 1, 1, "", "get_mahalanobis_matrix"], [20, 1, 1, "", "get_metadata_routing"], [20, 1, 1, "", "get_metric"], [20, 1, 1, "", "get_params"], [20, 1, 1, "", "pair_distance"], [20, 1, 1, "", "pair_score"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "score"], [20, 1, 1, "", "score_pairs"], [20, 1, 1, "", "set_decision_function_request"], [20, 1, 1, "", "set_fit_request"], [20, 1, 1, "", "set_params"], [20, 1, 1, "", "set_predict_request"], [20, 1, 1, "", "set_score_request"], [20, 1, 1, "", "set_threshold"], [20, 1, 1, "", "transform"]], "metric_learn.SDML_Supervised": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "fit"], [21, 1, 1, "", "fit_transform"], [21, 1, 1, "", "get_mahalanobis_matrix"], [21, 1, 1, "", "get_metadata_routing"], [21, 1, 1, "", "get_metric"], [21, 1, 1, "", "get_params"], [21, 1, 1, "", "pair_distance"], [21, 1, 1, "", "pair_score"], [21, 1, 1, "", "score_pairs"], [21, 1, 1, "", "set_output"], [21, 1, 1, "", "set_params"], [21, 1, 1, "", "transform"]], "metric_learn.base_metric": [[22, 0, 1, "", "BaseMetricLearner"], [23, 0, 1, "", "MahalanobisMixin"], [24, 0, 1, "", "MetricTransformer"], [25, 0, 1, "", "_PairsClassifierMixin"], [26, 0, 1, "", "_QuadrupletsClassifierMixin"], [27, 0, 1, "", "_TripletsClassifierMixin"]], "metric_learn.base_metric.BaseMetricLearner": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "get_metadata_routing"], [22, 1, 1, "", "get_metric"], [22, 1, 1, "", "get_params"], [22, 1, 1, "", "pair_distance"], [22, 1, 1, "", "pair_score"], [22, 1, 1, "", "score_pairs"], [22, 1, 1, "", "set_params"]], "metric_learn.base_metric.MahalanobisMixin": [[23, 1, 1, "", "__init__"], [23, 1, 1, "", "get_mahalanobis_matrix"], [23, 1, 1, "", "get_metadata_routing"], [23, 1, 1, "", "get_metric"], [23, 1, 1, "", "get_params"], [23, 1, 1, "", "pair_distance"], [23, 1, 1, "", "pair_score"], [23, 1, 1, "", "score_pairs"], [23, 1, 1, "", "set_params"], [23, 1, 1, "", "transform"]], "metric_learn.base_metric.MetricTransformer": [[24, 1, 1, "", "transform"]], "metric_learn.base_metric._PairsClassifierMixin": [[25, 1, 1, "", "__init__"], [25, 1, 1, "", "calibrate_threshold"], [25, 2, 1, "", "classes_"], [25, 1, 1, "", "decision_function"], [25, 1, 1, "", "get_metadata_routing"], [25, 1, 1, "", "get_metric"], [25, 1, 1, "", "get_params"], [25, 1, 1, "", "pair_distance"], [25, 1, 1, "", "pair_score"], [25, 1, 1, "", "predict"], [25, 1, 1, "", "score"], [25, 1, 1, "", "score_pairs"], [25, 1, 1, "", "set_decision_function_request"], [25, 1, 1, "", "set_params"], [25, 1, 1, "", "set_predict_request"], [25, 1, 1, "", "set_score_request"], [25, 1, 1, "", "set_threshold"]], "metric_learn.base_metric._QuadrupletsClassifierMixin": [[26, 1, 1, "", "__init__"], [26, 2, 1, "", "classes_"], [26, 1, 1, "", "decision_function"], [26, 1, 1, "", "get_metadata_routing"], [26, 1, 1, "", "get_metric"], [26, 1, 1, "", "get_params"], [26, 1, 1, "", "pair_distance"], [26, 1, 1, "", "pair_score"], [26, 1, 1, "", "predict"], [26, 1, 1, "", "score"], [26, 1, 1, "", "score_pairs"], [26, 1, 1, "", "set_decision_function_request"], [26, 1, 1, "", "set_params"], [26, 1, 1, "", "set_predict_request"], [26, 1, 1, "", "set_score_request"]], "metric_learn.base_metric._TripletsClassifierMixin": [[27, 1, 1, "", "__init__"], [27, 2, 1, "", "classes_"], [27, 1, 1, "", "decision_function"], [27, 1, 1, "", "get_metadata_routing"], [27, 1, 1, "", "get_metric"], [27, 1, 1, "", "get_params"], [27, 1, 1, "", "pair_distance"], [27, 1, 1, "", "pair_score"], [27, 1, 1, "", "predict"], [27, 1, 1, "", "score"], [27, 1, 1, "", "score_pairs"], [27, 1, 1, "", "set_decision_function_request"], [27, 1, 1, "", "set_params"], [27, 1, 1, "", "set_predict_request"], [27, 1, 1, "", "set_score_request"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"]}, "titleterms": {"exampl": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25], "algorithm": [1, 31, 33, 34, 36], "walkthrough": 1, "import": 1, "load": 1, "our": 1, "dataset": 1, "set": [1, 30], "up": 1, "plot": 1, "metric": [1, 29, 30, 33, 34, 36], "learn": [1, 29, 30, 31, 33, 34, 36], "larg": 1, "margin": 1, "nearest": 1, "neighbour": 1, "fit": [1, 33, 36], "transform": [1, 33, 36], "inform": 1, "theoret": 1, "mahalanobi": [1, 30], "cluster": 1, "spars": 1, "determin": 1, "least": 1, "squar": 1, "neighborhood": 1, "compon": 1, "analysi": 1, "local": 1, "fisher": 1, "discrimin": 1, "rel": 1, "regress": 1, "kernel": 1, "from": 1, "weaker": 1, "supervis": [1, 31, 33, 36], "sandwich": 2, "demo": 2, "comput": 3, "time": 3, "metric_learn": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31], "constraint": 4, "covari": [5, 34], "itml": [6, 36], "us": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30], "itml_supervis": 7, "lfda": [8, 33], "lmnn": [9, 33], "lsml": [10, 36], "lsml_supervis": 11, "mlkr": [12, 33], "mmc": [13, 36], "mmc_supervis": 14, "nca": [15, 33], "rca": [16, 36], "rca_supervis": 17, "scml": [18, 36], "scml_supervis": 19, "sdml": [20, 36], "sdml_supervis": 21, "base_metr": [22, 23, 24, 25, 26, 27], "basemetriclearn": 22, "mahalanobismixin": 23, "metrictransform": 24, "_pairsclassifiermixin": 25, "_quadrupletsclassifiermixin": 26, "_tripletsclassifiermixin": 27, "get": 28, "start": 28, "instal": 28, "setup": 28, "quick": 28, "python": 29, "document": 29, "outlin": 29, "what": 30, "i": 30, "problem": 30, "distanc": 30, "case": 30, "further": 30, "read": 30, "packag": 31, "modul": 31, "content": 31, "base": 31, "class": 31, "weakli": [31, 33, 36], "unsupervis": [31, 34], "preprocessor": [32, 36], "arrai": [32, 36], "like": 32, "callabl": 32, "gener": [33, 36], "api": [33, 36], "input": [33, 36], "data": [33, 36], "so": [33, 36], "scikit": [33, 36], "compat": [33, 36], "version": 33, "user": 35, "guid": 35, "basic": 36, "form": 36, "3d": 36, "tupl": 36, "2d": 36, "indic": 36, "predict": 36, "score": 36, "pair": 36, "threshold": 36, "triplet": 36, "quadruplet": 36}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Examples": [[0, "examples"]], "Algorithms walkthrough": [[1, "algorithms-walkthrough"]], "Imports": [[1, "imports"]], "Loading our dataset and setting up plotting": [[1, "loading-our-dataset-and-setting-up-plotting"]], "Metric Learning": [[1, "metric-learning"]], "Large Margin Nearest Neighbour": [[1, "large-margin-nearest-neighbour"]], "Fit and then transform!": [[1, "fit-and-then-transform"]], "Information Theoretic Metric Learning": [[1, "information-theoretic-metric-learning"]], "Mahalanobis Metric for Clustering": [[1, "mahalanobis-metric-for-clustering"]], "Sparse Determinant Metric Learning": [[1, "sparse-determinant-metric-learning"]], "Least Squares Metric Learning": [[1, "least-squares-metric-learning"]], "Neighborhood Components Analysis": [[1, "neighborhood-components-analysis"]], "Local Fisher Discriminant Analysis": [[1, "local-fisher-discriminant-analysis"]], "Relative Components Analysis": [[1, "relative-components-analysis"]], "Regression example: Metric Learning for Kernel Regression": [[1, "regression-example-metric-learning-for-kernel-regression"]], "Metric Learning from Weaker Supervision": [[1, "metric-learning-from-weaker-supervision"]], "Sandwich demo": [[2, "sandwich-demo"]], "Computation times": [[3, "computation-times"]], "metric_learn.Constraints": [[4, "metric-learn-constraints"]], "metric_learn.Covariance": [[5, "metric-learn-covariance"]], "metric_learn.ITML": [[6, "metric-learn-itml"]], "Examples using metric_learn.ITML": [[6, "examples-using-metric-learn-itml"]], "metric_learn.ITML_Supervised": [[7, "metric-learn-itml-supervised"]], "Examples using metric_learn.ITML_Supervised": [[7, "examples-using-metric-learn-itml-supervised"]], "metric_learn.LFDA": [[8, "metric-learn-lfda"]], "Examples using metric_learn.LFDA": [[8, "examples-using-metric-learn-lfda"]], "metric_learn.LMNN": [[9, "metric-learn-lmnn"]], "Examples using metric_learn.LMNN": [[9, "examples-using-metric-learn-lmnn"]], "metric_learn.LSML": [[10, "metric-learn-lsml"]], "Examples using metric_learn.LSML": [[10, "examples-using-metric-learn-lsml"]], "metric_learn.LSML_Supervised": [[11, "metric-learn-lsml-supervised"]], "Examples using metric_learn.LSML_Supervised": [[11, "examples-using-metric-learn-lsml-supervised"]], "metric_learn.MLKR": [[12, "metric-learn-mlkr"]], "Examples using metric_learn.MLKR": [[12, "examples-using-metric-learn-mlkr"]], "metric_learn.MMC": [[13, "metric-learn-mmc"]], "Examples using metric_learn.MMC": [[13, "examples-using-metric-learn-mmc"]], "metric_learn.MMC_Supervised": [[14, "metric-learn-mmc-supervised"]], "Examples using metric_learn.MMC_Supervised": [[14, "examples-using-metric-learn-mmc-supervised"]], "metric_learn.NCA": [[15, "metric-learn-nca"]], "Examples using metric_learn.NCA": [[15, "examples-using-metric-learn-nca"]], "metric_learn.RCA": [[16, "metric-learn-rca"]], "Examples using metric_learn.RCA": [[16, "examples-using-metric-learn-rca"]], "metric_learn.RCA_Supervised": [[17, "metric-learn-rca-supervised"]], "Examples using metric_learn.RCA_Supervised": [[17, "examples-using-metric-learn-rca-supervised"]], "metric_learn.SCML": [[18, "metric-learn-scml"]], "metric_learn.SCML_Supervised": [[19, "metric-learn-scml-supervised"]], "metric_learn.SDML": [[20, "metric-learn-sdml"]], "Examples using metric_learn.SDML": [[20, "examples-using-metric-learn-sdml"]], "metric_learn.SDML_Supervised": [[21, "metric-learn-sdml-supervised"]], "Examples using metric_learn.SDML_Supervised": [[21, "examples-using-metric-learn-sdml-supervised"]], "metric_learn.base_metric.BaseMetricLearner": [[22, "metric-learn-base-metric-basemetriclearner"]], "Examples using metric_learn.base_metric.BaseMetricLearner": [[22, "examples-using-metric-learn-base-metric-basemetriclearner"]], "metric_learn.base_metric.MahalanobisMixin": [[23, "metric-learn-base-metric-mahalanobismixin"]], "Examples using metric_learn.base_metric.MahalanobisMixin": [[23, "examples-using-metric-learn-base-metric-mahalanobismixin"]], "metric_learn.base_metric.MetricTransformer": [[24, "metric-learn-base-metric-metrictransformer"]], "Examples using metric_learn.base_metric.MetricTransformer": [[24, "examples-using-metric-learn-base-metric-metrictransformer"]], "metric_learn.base_metric._PairsClassifierMixin": [[25, "metric-learn-base-metric-pairsclassifiermixin"]], "Examples using metric_learn.base_metric._PairsClassifierMixin": [[25, "examples-using-metric-learn-base-metric-pairsclassifiermixin"]], "metric_learn.base_metric._QuadrupletsClassifierMixin": [[26, "metric-learn-base-metric-quadrupletsclassifiermixin"]], "metric_learn.base_metric._TripletsClassifierMixin": [[27, "metric-learn-base-metric-tripletsclassifiermixin"]], "Getting started": [[28, "getting-started"]], "Installation and Setup": [[28, "installation-and-setup"]], "Quick start": [[28, "quick-start"]], "metric-learn: Metric Learning in Python": [[29, "metric-learn-metric-learning-in-python"]], "Documentation outline": [[29, "documentation-outline"]], "What is Metric Learning?": [[30, "what-is-metric-learning"]], "Problem Setting": [[30, "problem-setting"]], "Mahalanobis Distances": [[30, "mahalanobis-distances"]], "Use-cases": [[30, "use-cases"]], "Further reading": [[30, "further-reading"]], "metric_learn package": [[31, "metric-learn-package"]], "Module Contents": [[31, "module-contents"]], "Base Classes": [[31, "base-classes"]], "Supervised Learning Algorithms": [[31, "supervised-learning-algorithms"]], "Weakly Supervised Learning Algorithms": [[31, "weakly-supervised-learning-algorithms"]], "Unsupervised Learning Algorithms": [[31, "unsupervised-learning-algorithms"]], "Preprocessor": [[32, "preprocessor"]], "Array-like": [[32, "array-like"]], "Callable": [[32, "callable"]], "Supervised Metric Learning": [[33, "supervised-metric-learning"]], "General API": [[33, "general-api"], [36, "general-api"]], "Input data": [[33, "input-data"], [36, "input-data"]], "Fit, transform, and so on": [[33, "fit-transform-and-so-on"], [36, "fit-transform-and-so-on"]], "Scikit-learn compatibility": [[33, "scikit-learn-compatibility"], [36, "scikit-learn-compatibility"]], "Algorithms": [[33, "algorithms"], [34, "algorithms"], [36, "algorithms"], [36, "id10"], [36, "id16"]], "LMNN": [[33, "lmnn"]], "NCA": [[33, "nca"]], "LFDA": [[33, "lfda"]], "MLKR": [[33, "mlkr"]], "Supervised versions of weakly-supervised algorithms": [[33, "supervised-versions-of-weakly-supervised-algorithms"]], "Unsupervised Metric Learning": [[34, "unsupervised-metric-learning"]], "Covariance": [[34, "covariance"]], "User Guide": [[35, "user-guide"]], "Weakly Supervised Metric Learning": [[36, "weakly-supervised-metric-learning"]], "Basic form": [[36, "basic-form"]], "3D array of tuples": [[36, "d-array-of-tuples"]], "2D array of indicators + preprocessor": [[36, "d-array-of-indicators-preprocessor"]], "Prediction and scoring": [[36, "prediction-and-scoring"]], "Learning on pairs": [[36, "learning-on-pairs"]], "Fitting": [[36, "fitting"], [36, "id7"], [36, "id13"]], "Prediction": [[36, "prediction"], [36, "triplets-predicting"], [36, "quadruplets-predicting"]], "Prediction threshold": [[36, "prediction-threshold"]], "Scoring": [[36, "scoring"], [36, "triplets-scoring"], [36, "quadruplets-scoring"]], "ITML": [[36, "itml"]], "SDML": [[36, "sdml"]], "RCA": [[36, "rca"]], "MMC": [[36, "mmc"]], "Learning on triplets": [[36, "learning-on-triplets"]], "SCML": [[36, "scml"]], "Learning on quadruplets": [[36, "learning-on-quadruplets"]], "LSML": [[36, "lsml"]]}, "indexentries": {"constraints (class in metric_learn)": [[4, "metric_learn.Constraints"]], "__init__() (metric_learn.constraints method)": [[4, "metric_learn.Constraints.__init__"]], "chunks() (metric_learn.constraints method)": [[4, "metric_learn.Constraints.chunks"]], "generate_knntriplets() (metric_learn.constraints method)": [[4, "metric_learn.Constraints.generate_knntriplets"]], "positive_negative_pairs() (metric_learn.constraints method)": [[4, "metric_learn.Constraints.positive_negative_pairs"]], "covariance (class in metric_learn)": [[5, "metric_learn.Covariance"]], "__init__() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.__init__"]], "fit() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.fit"]], "fit_transform() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.get_metadata_routing"]], "get_metric() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.get_metric"]], "get_params() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.get_params"]], "pair_distance() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.pair_distance"]], "pair_score() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.pair_score"]], "score_pairs() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.score_pairs"]], "set_output() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.set_output"]], "set_params() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.set_params"]], "transform() (metric_learn.covariance method)": [[5, "metric_learn.Covariance.transform"]], "itml (class in metric_learn)": [[6, "metric_learn.ITML"]], "__init__() (metric_learn.itml method)": [[6, "metric_learn.ITML.__init__"]], "calibrate_threshold() (metric_learn.itml method)": [[6, "metric_learn.ITML.calibrate_threshold"]], "classes_ (metric_learn.itml attribute)": [[6, "metric_learn.ITML.classes_"]], "decision_function() (metric_learn.itml method)": [[6, "metric_learn.ITML.decision_function"]], "fit() (metric_learn.itml method)": [[6, "metric_learn.ITML.fit"]], "get_mahalanobis_matrix() (metric_learn.itml method)": [[6, "metric_learn.ITML.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.itml method)": [[6, "metric_learn.ITML.get_metadata_routing"]], "get_metric() (metric_learn.itml method)": [[6, "metric_learn.ITML.get_metric"]], "get_params() (metric_learn.itml method)": [[6, "metric_learn.ITML.get_params"]], "pair_distance() (metric_learn.itml method)": [[6, "metric_learn.ITML.pair_distance"]], "pair_score() (metric_learn.itml method)": [[6, "metric_learn.ITML.pair_score"]], "predict() (metric_learn.itml method)": [[6, "metric_learn.ITML.predict"]], "score() (metric_learn.itml method)": [[6, "metric_learn.ITML.score"]], "score_pairs() (metric_learn.itml method)": [[6, "metric_learn.ITML.score_pairs"]], "set_decision_function_request() (metric_learn.itml method)": [[6, "metric_learn.ITML.set_decision_function_request"]], "set_fit_request() (metric_learn.itml method)": [[6, "metric_learn.ITML.set_fit_request"]], "set_params() (metric_learn.itml method)": [[6, "metric_learn.ITML.set_params"]], "set_predict_request() (metric_learn.itml method)": [[6, "metric_learn.ITML.set_predict_request"]], "set_score_request() (metric_learn.itml method)": [[6, "metric_learn.ITML.set_score_request"]], "set_threshold() (metric_learn.itml method)": [[6, "metric_learn.ITML.set_threshold"]], "transform() (metric_learn.itml method)": [[6, "metric_learn.ITML.transform"]], "itml_supervised (class in metric_learn)": [[7, "metric_learn.ITML_Supervised"]], "__init__() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.__init__"]], "fit() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.fit"]], "fit_transform() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.get_metadata_routing"]], "get_metric() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.get_metric"]], "get_params() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.get_params"]], "pair_distance() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.pair_distance"]], "pair_score() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.pair_score"]], "score_pairs() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.score_pairs"]], "set_fit_request() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.set_fit_request"]], "set_output() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.set_output"]], "set_params() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.set_params"]], "transform() (metric_learn.itml_supervised method)": [[7, "metric_learn.ITML_Supervised.transform"]], "lfda (class in metric_learn)": [[8, "metric_learn.LFDA"]], "__init__() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.__init__"]], "fit() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.fit"]], "fit_transform() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.get_metadata_routing"]], "get_metric() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.get_metric"]], "get_params() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.get_params"]], "pair_distance() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.pair_distance"]], "pair_score() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.pair_score"]], "score_pairs() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.score_pairs"]], "set_output() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.set_output"]], "set_params() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.set_params"]], "transform() (metric_learn.lfda method)": [[8, "metric_learn.LFDA.transform"]], "lmnn (class in metric_learn)": [[9, "metric_learn.LMNN"]], "__init__() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.__init__"]], "fit() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.fit"]], "fit_transform() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.get_metadata_routing"]], "get_metric() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.get_metric"]], "get_params() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.get_params"]], "pair_distance() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.pair_distance"]], "pair_score() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.pair_score"]], "score_pairs() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.score_pairs"]], "set_output() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.set_output"]], "set_params() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.set_params"]], "transform() (metric_learn.lmnn method)": [[9, "metric_learn.LMNN.transform"]], "lsml (class in metric_learn)": [[10, "metric_learn.LSML"]], "__init__() (metric_learn.lsml method)": [[10, "metric_learn.LSML.__init__"]], "classes_ (metric_learn.lsml attribute)": [[10, "metric_learn.LSML.classes_"]], "decision_function() (metric_learn.lsml method)": [[10, "metric_learn.LSML.decision_function"]], "fit() (metric_learn.lsml method)": [[10, "metric_learn.LSML.fit"]], "get_mahalanobis_matrix() (metric_learn.lsml method)": [[10, "metric_learn.LSML.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.lsml method)": [[10, "metric_learn.LSML.get_metadata_routing"]], "get_metric() (metric_learn.lsml method)": [[10, "metric_learn.LSML.get_metric"]], "get_params() (metric_learn.lsml method)": [[10, "metric_learn.LSML.get_params"]], "pair_distance() (metric_learn.lsml method)": [[10, "metric_learn.LSML.pair_distance"]], "pair_score() (metric_learn.lsml method)": [[10, "metric_learn.LSML.pair_score"]], "predict() (metric_learn.lsml method)": [[10, "metric_learn.LSML.predict"]], "score() (metric_learn.lsml method)": [[10, "metric_learn.LSML.score"]], "score_pairs() (metric_learn.lsml method)": [[10, "metric_learn.LSML.score_pairs"]], "set_decision_function_request() (metric_learn.lsml method)": [[10, "metric_learn.LSML.set_decision_function_request"]], "set_fit_request() (metric_learn.lsml method)": [[10, "metric_learn.LSML.set_fit_request"]], "set_params() (metric_learn.lsml method)": [[10, "metric_learn.LSML.set_params"]], "set_predict_request() (metric_learn.lsml method)": [[10, "metric_learn.LSML.set_predict_request"]], "set_score_request() (metric_learn.lsml method)": [[10, "metric_learn.LSML.set_score_request"]], "transform() (metric_learn.lsml method)": [[10, "metric_learn.LSML.transform"]], "lsml_supervised (class in metric_learn)": [[11, "metric_learn.LSML_Supervised"]], "__init__() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.__init__"]], "fit() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.fit"]], "fit_transform() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.get_metadata_routing"]], "get_metric() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.get_metric"]], "get_params() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.get_params"]], "pair_distance() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.pair_distance"]], "pair_score() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.pair_score"]], "score_pairs() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.score_pairs"]], "set_output() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.set_output"]], "set_params() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.set_params"]], "transform() (metric_learn.lsml_supervised method)": [[11, "metric_learn.LSML_Supervised.transform"]], "mlkr (class in metric_learn)": [[12, "metric_learn.MLKR"]], "__init__() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.__init__"]], "fit() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.fit"]], "fit_transform() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.get_metadata_routing"]], "get_metric() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.get_metric"]], "get_params() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.get_params"]], "pair_distance() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.pair_distance"]], "pair_score() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.pair_score"]], "score_pairs() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.score_pairs"]], "set_output() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.set_output"]], "set_params() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.set_params"]], "transform() (metric_learn.mlkr method)": [[12, "metric_learn.MLKR.transform"]], "mmc (class in metric_learn)": [[13, "metric_learn.MMC"]], "__init__() (metric_learn.mmc method)": [[13, "metric_learn.MMC.__init__"]], "calibrate_threshold() (metric_learn.mmc method)": [[13, "metric_learn.MMC.calibrate_threshold"]], "classes_ (metric_learn.mmc attribute)": [[13, "metric_learn.MMC.classes_"]], "decision_function() (metric_learn.mmc method)": [[13, "metric_learn.MMC.decision_function"]], "fit() (metric_learn.mmc method)": [[13, "metric_learn.MMC.fit"]], "get_mahalanobis_matrix() (metric_learn.mmc method)": [[13, "metric_learn.MMC.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.mmc method)": [[13, "metric_learn.MMC.get_metadata_routing"]], "get_metric() (metric_learn.mmc method)": [[13, "metric_learn.MMC.get_metric"]], "get_params() (metric_learn.mmc method)": [[13, "metric_learn.MMC.get_params"]], "pair_distance() (metric_learn.mmc method)": [[13, "metric_learn.MMC.pair_distance"]], "pair_score() (metric_learn.mmc method)": [[13, "metric_learn.MMC.pair_score"]], "predict() (metric_learn.mmc method)": [[13, "metric_learn.MMC.predict"]], "score() (metric_learn.mmc method)": [[13, "metric_learn.MMC.score"]], "score_pairs() (metric_learn.mmc method)": [[13, "metric_learn.MMC.score_pairs"]], "set_decision_function_request() (metric_learn.mmc method)": [[13, "metric_learn.MMC.set_decision_function_request"]], "set_fit_request() (metric_learn.mmc method)": [[13, "metric_learn.MMC.set_fit_request"]], "set_params() (metric_learn.mmc method)": [[13, "metric_learn.MMC.set_params"]], "set_predict_request() (metric_learn.mmc method)": [[13, "metric_learn.MMC.set_predict_request"]], "set_score_request() (metric_learn.mmc method)": [[13, "metric_learn.MMC.set_score_request"]], "set_threshold() (metric_learn.mmc method)": [[13, "metric_learn.MMC.set_threshold"]], "transform() (metric_learn.mmc method)": [[13, "metric_learn.MMC.transform"]], "mmc_supervised (class in metric_learn)": [[14, "metric_learn.MMC_Supervised"]], "__init__() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.__init__"]], "fit() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.fit"]], "fit_transform() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.get_metadata_routing"]], "get_metric() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.get_metric"]], "get_params() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.get_params"]], "pair_distance() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.pair_distance"]], "pair_score() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.pair_score"]], "score_pairs() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.score_pairs"]], "set_output() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.set_output"]], "set_params() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.set_params"]], "transform() (metric_learn.mmc_supervised method)": [[14, "metric_learn.MMC_Supervised.transform"]], "nca (class in metric_learn)": [[15, "metric_learn.NCA"]], "__init__() (metric_learn.nca method)": [[15, "metric_learn.NCA.__init__"]], "fit() (metric_learn.nca method)": [[15, "metric_learn.NCA.fit"]], "fit_transform() (metric_learn.nca method)": [[15, "metric_learn.NCA.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.nca method)": [[15, "metric_learn.NCA.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.nca method)": [[15, "metric_learn.NCA.get_metadata_routing"]], "get_metric() (metric_learn.nca method)": [[15, "metric_learn.NCA.get_metric"]], "get_params() (metric_learn.nca method)": [[15, "metric_learn.NCA.get_params"]], "pair_distance() (metric_learn.nca method)": [[15, "metric_learn.NCA.pair_distance"]], "pair_score() (metric_learn.nca method)": [[15, "metric_learn.NCA.pair_score"]], "score_pairs() (metric_learn.nca method)": [[15, "metric_learn.NCA.score_pairs"]], "set_output() (metric_learn.nca method)": [[15, "metric_learn.NCA.set_output"]], "set_params() (metric_learn.nca method)": [[15, "metric_learn.NCA.set_params"]], "transform() (metric_learn.nca method)": [[15, "metric_learn.NCA.transform"]], "rca (class in metric_learn)": [[16, "metric_learn.RCA"]], "__init__() (metric_learn.rca method)": [[16, "metric_learn.RCA.__init__"]], "fit() (metric_learn.rca method)": [[16, "metric_learn.RCA.fit"]], "fit_transform() (metric_learn.rca method)": [[16, "metric_learn.RCA.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.rca method)": [[16, "metric_learn.RCA.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.rca method)": [[16, "metric_learn.RCA.get_metadata_routing"]], "get_metric() (metric_learn.rca method)": [[16, "metric_learn.RCA.get_metric"]], "get_params() (metric_learn.rca method)": [[16, "metric_learn.RCA.get_params"]], "pair_distance() (metric_learn.rca method)": [[16, "metric_learn.RCA.pair_distance"]], "pair_score() (metric_learn.rca method)": [[16, "metric_learn.RCA.pair_score"]], "score_pairs() (metric_learn.rca method)": [[16, "metric_learn.RCA.score_pairs"]], "set_fit_request() (metric_learn.rca method)": [[16, "metric_learn.RCA.set_fit_request"]], "set_output() (metric_learn.rca method)": [[16, "metric_learn.RCA.set_output"]], "set_params() (metric_learn.rca method)": [[16, "metric_learn.RCA.set_params"]], "transform() (metric_learn.rca method)": [[16, "metric_learn.RCA.transform"]], "rca_supervised (class in metric_learn)": [[17, "metric_learn.RCA_Supervised"]], "__init__() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.__init__"]], "fit() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.fit"]], "fit_transform() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.get_metadata_routing"]], "get_metric() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.get_metric"]], "get_params() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.get_params"]], "pair_distance() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.pair_distance"]], "pair_score() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.pair_score"]], "score_pairs() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.score_pairs"]], "set_fit_request() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.set_fit_request"]], "set_output() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.set_output"]], "set_params() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.set_params"]], "transform() (metric_learn.rca_supervised method)": [[17, "metric_learn.RCA_Supervised.transform"]], "scml (class in metric_learn)": [[18, "metric_learn.SCML"]], "__init__() (metric_learn.scml method)": [[18, "metric_learn.SCML.__init__"]], "classes_ (metric_learn.scml attribute)": [[18, "metric_learn.SCML.classes_"]], "decision_function() (metric_learn.scml method)": [[18, "metric_learn.SCML.decision_function"]], "fit() (metric_learn.scml method)": [[18, "metric_learn.SCML.fit"]], "get_mahalanobis_matrix() (metric_learn.scml method)": [[18, "metric_learn.SCML.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.scml method)": [[18, "metric_learn.SCML.get_metadata_routing"]], "get_metric() (metric_learn.scml method)": [[18, "metric_learn.SCML.get_metric"]], "get_params() (metric_learn.scml method)": [[18, "metric_learn.SCML.get_params"]], "pair_distance() (metric_learn.scml method)": [[18, "metric_learn.SCML.pair_distance"]], "pair_score() (metric_learn.scml method)": [[18, "metric_learn.SCML.pair_score"]], "predict() (metric_learn.scml method)": [[18, "metric_learn.SCML.predict"]], "score() (metric_learn.scml method)": [[18, "metric_learn.SCML.score"]], "score_pairs() (metric_learn.scml method)": [[18, "metric_learn.SCML.score_pairs"]], "set_decision_function_request() (metric_learn.scml method)": [[18, "metric_learn.SCML.set_decision_function_request"]], "set_fit_request() (metric_learn.scml method)": [[18, "metric_learn.SCML.set_fit_request"]], "set_params() (metric_learn.scml method)": [[18, "metric_learn.SCML.set_params"]], "set_predict_request() (metric_learn.scml method)": [[18, "metric_learn.SCML.set_predict_request"]], "set_score_request() (metric_learn.scml method)": [[18, "metric_learn.SCML.set_score_request"]], "transform() (metric_learn.scml method)": [[18, "metric_learn.SCML.transform"]], "scml_supervised (class in metric_learn)": [[19, "metric_learn.SCML_Supervised"]], "__init__() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.__init__"]], "fit() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.fit"]], "fit_transform() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.get_metadata_routing"]], "get_metric() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.get_metric"]], "get_params() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.get_params"]], "pair_distance() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.pair_distance"]], "pair_score() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.pair_score"]], "score_pairs() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.score_pairs"]], "set_output() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.set_output"]], "set_params() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.set_params"]], "transform() (metric_learn.scml_supervised method)": [[19, "metric_learn.SCML_Supervised.transform"]], "sdml (class in metric_learn)": [[20, "metric_learn.SDML"]], "__init__() (metric_learn.sdml method)": [[20, "metric_learn.SDML.__init__"]], "calibrate_threshold() (metric_learn.sdml method)": [[20, "metric_learn.SDML.calibrate_threshold"]], "classes_ (metric_learn.sdml attribute)": [[20, "metric_learn.SDML.classes_"]], "decision_function() (metric_learn.sdml method)": [[20, "metric_learn.SDML.decision_function"]], "fit() (metric_learn.sdml method)": [[20, "metric_learn.SDML.fit"]], "get_mahalanobis_matrix() (metric_learn.sdml method)": [[20, "metric_learn.SDML.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.sdml method)": [[20, "metric_learn.SDML.get_metadata_routing"]], "get_metric() (metric_learn.sdml method)": [[20, "metric_learn.SDML.get_metric"]], "get_params() (metric_learn.sdml method)": [[20, "metric_learn.SDML.get_params"]], "pair_distance() (metric_learn.sdml method)": [[20, "metric_learn.SDML.pair_distance"]], "pair_score() (metric_learn.sdml method)": [[20, "metric_learn.SDML.pair_score"]], "predict() (metric_learn.sdml method)": [[20, "metric_learn.SDML.predict"]], "score() (metric_learn.sdml method)": [[20, "metric_learn.SDML.score"]], "score_pairs() (metric_learn.sdml method)": [[20, "metric_learn.SDML.score_pairs"]], "set_decision_function_request() (metric_learn.sdml method)": [[20, "metric_learn.SDML.set_decision_function_request"]], "set_fit_request() (metric_learn.sdml method)": [[20, "metric_learn.SDML.set_fit_request"]], "set_params() (metric_learn.sdml method)": [[20, "metric_learn.SDML.set_params"]], "set_predict_request() (metric_learn.sdml method)": [[20, "metric_learn.SDML.set_predict_request"]], "set_score_request() (metric_learn.sdml method)": [[20, "metric_learn.SDML.set_score_request"]], "set_threshold() (metric_learn.sdml method)": [[20, "metric_learn.SDML.set_threshold"]], "transform() (metric_learn.sdml method)": [[20, "metric_learn.SDML.transform"]], "sdml_supervised (class in metric_learn)": [[21, "metric_learn.SDML_Supervised"]], "__init__() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.__init__"]], "fit() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.fit"]], "fit_transform() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.fit_transform"]], "get_mahalanobis_matrix() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.get_metadata_routing"]], "get_metric() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.get_metric"]], "get_params() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.get_params"]], "pair_distance() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.pair_distance"]], "pair_score() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.pair_score"]], "score_pairs() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.score_pairs"]], "set_output() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.set_output"]], "set_params() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.set_params"]], "transform() (metric_learn.sdml_supervised method)": [[21, "metric_learn.SDML_Supervised.transform"]], "basemetriclearner (class in metric_learn.base_metric)": [[22, "metric_learn.base_metric.BaseMetricLearner"]], "__init__() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.__init__"]], "get_metadata_routing() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.get_metadata_routing"]], "get_metric() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.get_metric"]], "get_params() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.get_params"]], "pair_distance() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.pair_distance"]], "pair_score() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.pair_score"]], "score_pairs() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.score_pairs"]], "set_params() (metric_learn.base_metric.basemetriclearner method)": [[22, "metric_learn.base_metric.BaseMetricLearner.set_params"]], "mahalanobismixin (class in metric_learn.base_metric)": [[23, "metric_learn.base_metric.MahalanobisMixin"]], "__init__() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.__init__"]], "get_mahalanobis_matrix() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.get_mahalanobis_matrix"]], "get_metadata_routing() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.get_metadata_routing"]], "get_metric() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.get_metric"]], "get_params() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.get_params"]], "pair_distance() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.pair_distance"]], "pair_score() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.pair_score"]], "score_pairs() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.score_pairs"]], "set_params() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.set_params"]], "transform() (metric_learn.base_metric.mahalanobismixin method)": [[23, "metric_learn.base_metric.MahalanobisMixin.transform"]], "metrictransformer (class in metric_learn.base_metric)": [[24, "metric_learn.base_metric.MetricTransformer"]], "transform() (metric_learn.base_metric.metrictransformer method)": [[24, "metric_learn.base_metric.MetricTransformer.transform"]], "_pairsclassifiermixin (class in metric_learn.base_metric)": [[25, "metric_learn.base_metric._PairsClassifierMixin"]], "__init__() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.__init__"]], "calibrate_threshold() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.calibrate_threshold"]], "classes_ (metric_learn.base_metric._pairsclassifiermixin attribute)": [[25, "metric_learn.base_metric._PairsClassifierMixin.classes_"]], "decision_function() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.decision_function"]], "get_metadata_routing() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.get_metadata_routing"]], "get_metric() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.get_metric"]], "get_params() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.get_params"]], "pair_distance() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.pair_distance"]], "pair_score() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.pair_score"]], "predict() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.predict"]], "score() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.score"]], "score_pairs() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.score_pairs"]], "set_decision_function_request() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.set_decision_function_request"]], "set_params() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.set_params"]], "set_predict_request() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.set_predict_request"]], "set_score_request() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.set_score_request"]], "set_threshold() (metric_learn.base_metric._pairsclassifiermixin method)": [[25, "metric_learn.base_metric._PairsClassifierMixin.set_threshold"]], "_quadrupletsclassifiermixin (class in metric_learn.base_metric)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin"]], "__init__() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.__init__"]], "classes_ (metric_learn.base_metric._quadrupletsclassifiermixin attribute)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.classes_"]], "decision_function() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.decision_function"]], "get_metadata_routing() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.get_metadata_routing"]], "get_metric() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.get_metric"]], "get_params() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.get_params"]], "pair_distance() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.pair_distance"]], "pair_score() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.pair_score"]], "predict() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.predict"]], "score() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.score"]], "score_pairs() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.score_pairs"]], "set_decision_function_request() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.set_decision_function_request"]], "set_params() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.set_params"]], "set_predict_request() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.set_predict_request"]], "set_score_request() (metric_learn.base_metric._quadrupletsclassifiermixin method)": [[26, "metric_learn.base_metric._QuadrupletsClassifierMixin.set_score_request"]], "_tripletsclassifiermixin (class in metric_learn.base_metric)": [[27, "metric_learn.base_metric._TripletsClassifierMixin"]], "__init__() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.__init__"]], "classes_ (metric_learn.base_metric._tripletsclassifiermixin attribute)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.classes_"]], "decision_function() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.decision_function"]], "get_metadata_routing() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.get_metadata_routing"]], "get_metric() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.get_metric"]], "get_params() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.get_params"]], "pair_distance() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.pair_distance"]], "pair_score() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.pair_score"]], "predict() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.predict"]], "score() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.score"]], "score_pairs() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.score_pairs"]], "set_decision_function_request() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.set_decision_function_request"]], "set_params() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.set_params"]], "set_predict_request() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.set_predict_request"]], "set_score_request() (metric_learn.base_metric._tripletsclassifiermixin method)": [[27, "metric_learn.base_metric._TripletsClassifierMixin.set_score_request"]]}})